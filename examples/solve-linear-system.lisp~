
(defpackage #:solve-linear-system
  (:use :cl :fpoly))

(in-package #:solve-linear-system)

(defun parse-polynomial (string)
  string)

(defun load-matrix (fname)
  "Load a matrix of polynomials from a file. File format is
<size>
<polynomial-or-number>
...more polynomials, one on each line...

With polynomial-or-number = [<number> | <list of vars> <degree> <list of coeffs>]"
  (with-open-file (f fname :direction :input)
	(let ((size (parse-integer (read-line f nil nil)))
		  (mat (make-matrix size))
		  (vec (make-array size)))
	  (dotimes (row size)
		(dotimes (col size)
		  (setf (aref mat col row) (parse-polynomial (read-line f nil nil))))
		(setf (svref vec row) (parse-polynomial (read-line f nil nil))))
	  (list mat vec))))




	  
